{"version":3,"file":"pixi-svg.js","sources":["../node_modules/d-path-parser/parser.js","../node_modules/tinycolor2/tinycolor.js","../src/SVG.js"],"sourcesContent":["/*!\n * d-path-parser - v1.0.0\n * by Massimo Artizzu (MaxArt2501)\n *\n * https://github.com/MaxArt2501/d-path-parser\n *\n * Licensed under the MIT License\n * See LICENSE for details\n */\n\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof exports === \"object\") {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.dPathParse = factory();\n    }\n})(this, function() {\n\"use strict\";\n\nreturn function parse(d) {\n    var re = {\n        command: /\\s*([achlmqstvz])/gi,\n        number: /\\s*([+-]?\\d*\\.?\\d+(?:e[+-]?\\d+)?)/gi,\n        comma: /\\s*(?:(,)|\\s)/g,\n        flag: /\\s*([01])/g\n    };\n    var matchers = {\n        \"number\": function(must) {\n            return +get(\"number\", must);\n        },\n        \"coordinate pair\": function(must) {\n            var x = get(\"number\", must);\n            if (x === null && !must) return null;\n            get(\"comma\");\n            var y = get(\"number\", true);\n            return { x: +x, y: +y };\n        },\n        \"arc definition\": function(must) {\n            var radii = matchers[\"coordinate pair\"](must);\n            if (!radii && !must) return null;\n            get(\"comma\");\n            var rotation = +get(\"number\", true);\n            get(\"comma\", true);\n            var large = !!+get(\"flag\", true);\n            get(\"comma\");\n            var clockwise = !!+get(\"flag\", true);\n            get(\"comma\");\n            var end = matchers[\"coordinate pair\"](true);\n            return {\n                radii: radii,\n                rotation: rotation,\n                large: large,\n                clockwise: clockwise,\n                end: end\n            };\n        }\n    }\n    var index = 0;\n    var commands = [];\n\n    while (index < d.length) {\n        var cmd = get(\"command\");\n        var upcmd = cmd.toUpperCase();\n        var relative = cmd !== upcmd;\n        var sequence;\n        switch (upcmd) {\n            case \"M\":\n                sequence = getSequence(\"coordinate pair\").map(function(coords, i) {\n                    if (i === 1) cmd = relative ? \"l\" : \"L\";\n                    return makeCommand({ end: coords });\n                });\n                break;\n            case \"L\":\n            case \"T\":\n                sequence = getSequence(\"coordinate pair\").map(function(coords) {\n                    return makeCommand({ end: coords });\n                });\n                break;\n            case \"C\":\n                sequence = getSequence(\"coordinate pair\");\n                if (sequence.length % 3)\n                    throw Error(\"Expected coordinate pair triplet at position \" + index);\n\n                sequence = sequence.reduce(function(seq, coords, i) {\n                    var rest = i % 3;\n                    if (!rest) {\n                        seq.push(makeCommand({ cp1: coords }));\n                    } else {\n                        var last = seq[seq.length - 1];\n                        last[rest === 1 ? \"cp2\" : \"end\"] = coords;\n                    }\n                    return seq;\n                }, []);\n\n                break;\n            case \"Q\":\n            case \"S\":\n                sequence = getSequence(\"coordinate pair\");\n                if (sequence.length & 1)\n                    throw Error(\"Expected coordinate pair couple at position \" + index);\n\n                sequence = sequence.reduce(function(seq, coords, i) {\n                    var odd = i & 1;\n                    if (!odd) {\n                        seq.push(makeCommand({ cp: coords }));\n                    } else {\n                        var last = seq[seq.length - 1];\n                        last.end = coords;\n                    }\n                    return seq;\n                }, []);\n\n                break;\n            case \"H\":\n            case \"V\":\n                sequence = getSequence(\"number\").map(function(value) {\n                    return makeCommand({ value: value });\n                });\n                break;\n            case \"A\":\n                sequence = getSequence(\"arc definition\").map(makeCommand);\n                break;\n            case \"Z\":\n                sequence = [ { code: \"Z\" } ];\n                break;\n        }\n        commands.push.apply(commands, sequence);\n    }\n\n    return commands;\n\n    function makeCommand(obj) {\n        obj.code = cmd;\n        obj.relative = relative;\n\n        return obj;\n    }\n    function get(what, must) {\n        re[what].lastIndex = index;\n        var res = re[what].exec(d);\n        if (!res || res.index !== index) {\n            if (!must) return null;\n            throw Error(\"Expected \" + what + \" at position \" + index);\n        }\n\n        index = re[what].lastIndex;\n\n        return res[1];\n    }\n    function getSequence(what) {\n        var sequence = [];\n        var matched;\n        var must = true;\n        while (matched = matchers[what](must)) {\n            sequence.push(matched);\n            must = !!get(\"comma\");\n        }\n\n        return sequence;\n    }\n};\n});\n","// TinyColor v1.4.1\n// https://github.com/bgrins/TinyColor\n// Brian Grinstead, MIT License\n\n(function(Math) {\n\nvar trimLeft = /^\\s+/,\n    trimRight = /\\s+$/,\n    tinyCounter = 0,\n    mathRound = Math.round,\n    mathMin = Math.min,\n    mathMax = Math.max,\n    mathRandom = Math.random;\n\nfunction tinycolor (color, opts) {\n\n    color = (color) ? color : '';\n    opts = opts || { };\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n       return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n        return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color,\n    this._r = rgb.r,\n    this._g = rgb.g,\n    this._b = rgb.b,\n    this._a = rgb.a,\n    this._roundA = mathRound(100*this._a) / 100,\n    this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) { this._r = mathRound(this._r); }\n    if (this._g < 1) { this._g = mathRound(this._g); }\n    if (this._b < 1) { this._b = mathRound(this._b); }\n\n    this._ok = rgb.ok;\n    this._tc_id = tinyCounter++;\n}\n\ntinycolor.prototype = {\n    isDark: function() {\n        return this.getBrightness() < 128;\n    },\n    isLight: function() {\n        return !this.isDark();\n    },\n    isValid: function() {\n        return this._ok;\n    },\n    getOriginalInput: function() {\n      return this._originalInput;\n    },\n    getFormat: function() {\n        return this._format;\n    },\n    getAlpha: function() {\n        return this._a;\n    },\n    getBrightness: function() {\n        //http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function() {\n        //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var RsRGB, GsRGB, BsRGB, R, G, B;\n        RsRGB = rgb.r/255;\n        GsRGB = rgb.g/255;\n        BsRGB = rgb.b/255;\n\n        if (RsRGB <= 0.03928) {R = RsRGB / 12.92;} else {R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);}\n        if (GsRGB <= 0.03928) {G = GsRGB / 12.92;} else {G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);}\n        if (BsRGB <= 0.03928) {B = BsRGB / 12.92;} else {B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);}\n        return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\n    },\n    setAlpha: function(value) {\n        this._a = boundAlpha(value);\n        this._roundA = mathRound(100*this._a) / 100;\n        return this;\n    },\n    toHsv: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function() {\n        var hsv = rgbToHsv(this._r, this._g, this._b);\n        var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\n        return (this._a == 1) ?\n          \"hsv(\"  + h + \", \" + s + \"%, \" + v + \"%)\" :\n          \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \"+ this._roundA + \")\";\n    },\n    toHsl: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function() {\n        var hsl = rgbToHsl(this._r, this._g, this._b);\n        var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\n        return (this._a == 1) ?\n          \"hsl(\"  + h + \", \" + s + \"%, \" + l + \"%)\" :\n          \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \"+ this._roundA + \")\";\n    },\n    toHex: function(allow3Char) {\n        return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function(allow3Char) {\n        return '#' + this.toHex(allow3Char);\n    },\n    toHex8: function(allow4Char) {\n        return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function(allow4Char) {\n        return '#' + this.toHex8(allow4Char);\n    },\n    toRgb: function() {\n        return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n    },\n    toRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" :\n          \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function() {\n        return { r: mathRound(bound01(this._r, 255) * 100) + \"%\", g: mathRound(bound01(this._g, 255) * 100) + \"%\", b: mathRound(bound01(this._b, 255) * 100) + \"%\", a: this._a };\n    },\n    toPercentageRgbString: function() {\n        return (this._a == 1) ?\n          \"rgb(\"  + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" :\n          \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function() {\n        if (this._a === 0) {\n            return \"transparent\";\n        }\n\n        if (this._a < 1) {\n            return false;\n        }\n\n        return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function(secondColor) {\n        var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n        var secondHex8String = hex8String;\n        var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n        if (secondColor) {\n            var s = tinycolor(secondColor);\n            secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n        }\n\n        return \"progid:DXImageTransform.Microsoft.gradient(\"+gradientType+\"startColorstr=\"+hex8String+\",endColorstr=\"+secondHex8String+\")\";\n    },\n    toString: function(format) {\n        var formatSet = !!format;\n        format = format || this._format;\n\n        var formattedString = false;\n        var hasAlpha = this._a < 1 && this._a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === \"name\" && this._a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === \"rgb\") {\n            formattedString = this.toRgbString();\n        }\n        if (format === \"prgb\") {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === \"hex\" || format === \"hex6\") {\n            formattedString = this.toHexString();\n        }\n        if (format === \"hex3\") {\n            formattedString = this.toHexString(true);\n        }\n        if (format === \"hex4\") {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === \"hex8\") {\n            formattedString = this.toHex8String();\n        }\n        if (format === \"name\") {\n            formattedString = this.toName();\n        }\n        if (format === \"hsl\") {\n            formattedString = this.toHslString();\n        }\n        if (format === \"hsv\") {\n            formattedString = this.toHsvString();\n        }\n\n        return formattedString || this.toHexString();\n    },\n    clone: function() {\n        return tinycolor(this.toString());\n    },\n\n    _applyModification: function(fn, args) {\n        var color = fn.apply(null, [this].concat([].slice.call(args)));\n        this._r = color._r;\n        this._g = color._g;\n        this._b = color._b;\n        this.setAlpha(color._a);\n        return this;\n    },\n    lighten: function() {\n        return this._applyModification(lighten, arguments);\n    },\n    brighten: function() {\n        return this._applyModification(brighten, arguments);\n    },\n    darken: function() {\n        return this._applyModification(darken, arguments);\n    },\n    desaturate: function() {\n        return this._applyModification(desaturate, arguments);\n    },\n    saturate: function() {\n        return this._applyModification(saturate, arguments);\n    },\n    greyscale: function() {\n        return this._applyModification(greyscale, arguments);\n    },\n    spin: function() {\n        return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function(fn, args) {\n        return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function() {\n        return this._applyCombination(analogous, arguments);\n    },\n    complement: function() {\n        return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function() {\n        return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function() {\n        return this._applyCombination(splitcomplement, arguments);\n    },\n    triad: function() {\n        return this._applyCombination(triad, arguments);\n    },\n    tetrad: function() {\n        return this._applyCombination(tetrad, arguments);\n    }\n};\n\n// If input is an object, force 1 into \"1.0\" to handle ratios properly\n// String input requires \"1.0\" as input, so 1 will be treated as 1\ntinycolor.fromRatio = function(color, opts) {\n    if (typeof color == \"object\") {\n        var newColor = {};\n        for (var i in color) {\n            if (color.hasOwnProperty(i)) {\n                if (i === \"a\") {\n                    newColor[i] = color[i];\n                }\n                else {\n                    newColor[i] = convertToPercentage(color[i]);\n                }\n            }\n        }\n        color = newColor;\n    }\n\n    return tinycolor(color, opts);\n};\n\n// Given a string or object, convert that input to RGB\n// Possible string inputs:\n//\n//     \"red\"\n//     \"#f00\" or \"f00\"\n//     \"#ff0000\" or \"ff0000\"\n//     \"#ff000000\" or \"ff000000\"\n//     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n//     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n//     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n//     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n//     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n//     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n//     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n//\nfunction inputToRGB(color) {\n\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n        color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = \"hsv\";\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = \"hsl\";\n        }\n\n        if (color.hasOwnProperty(\"a\")) {\n            a = color.a;\n        }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: mathMin(255, mathMax(rgb.r, 0)),\n        g: mathMin(255, mathMax(rgb.g, 0)),\n        b: mathMin(255, mathMax(rgb.b, 0)),\n        a: a\n    };\n}\n\n\n// Conversion Functions\n// --------------------\n\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n// `rgbToRgb`\n// Handle bounds / percentage checking to conform to CSS color spec\n// <http://www.w3.org/TR/css3-color/>\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\n// *Returns:* { r, g, b } in [0, 255]\nfunction rgbToRgb(r, g, b){\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255\n    };\n}\n\n// `rgbToHsl`\n// Converts an RGB color value to HSL.\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n// *Returns:* { h, s, l } in [0,1]\nfunction rgbToHsl(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, l = (max + min) / 2;\n\n    if(max == min) {\n        h = s = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n\n        h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n}\n\n// `hslToRgb`\n// Converts an HSL color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\nfunction hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n        if(t < 0) t += 1;\n        if(t > 1) t -= 1;\n        if(t < 1/6) return p + (q - p) * 6 * t;\n        if(t < 1/2) return q;\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n        return p;\n    }\n\n    if(s === 0) {\n        r = g = b = l; // achromatic\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1/3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1/3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHsv`\n// Converts an RGB color value to HSV\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n// *Returns:* { h, s, v } in [0,1]\nfunction rgbToHsv(r, g, b) {\n\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = mathMax(r, g, b), min = mathMin(r, g, b);\n    var h, s, v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if(max == min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch(max) {\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n            case g: h = (b - r) / d + 2; break;\n            case b: h = (r - g) / d + 4; break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n\n// `hsvToRgb`\n// Converts an HSV color value to RGB.\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n// *Returns:* { r, g, b } in the set [0, 255]\n function hsvToRgb(h, s, v) {\n\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n\n// `rgbToHex`\n// Converts an RGB color to hex\n// Assumes r, g, and b are contained in the set [0, 255]\n// Returns a 3 or 6 character hex\nfunction rgbToHex(r, g, b, allow3Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    // Return a 3 character hex if possible\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToHex`\n// Converts an RGBA color plus alpha transparency to hex\n// Assumes r, g, b are contained in the set [0, 255] and\n// a in [0, 1]. Returns a 4 or 8 character rgba hex\nfunction rgbaToHex(r, g, b, a, allow4Char) {\n\n    var hex = [\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16)),\n        pad2(convertDecimalToHex(a))\n    ];\n\n    // Return a 4 character hex if possible\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n}\n\n// `rgbaToArgbHex`\n// Converts an RGBA color to an ARGB Hex8 string\n// Rarely used, but required for \"toFilter()\"\nfunction rgbaToArgbHex(r, g, b, a) {\n\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(mathRound(r).toString(16)),\n        pad2(mathRound(g).toString(16)),\n        pad2(mathRound(b).toString(16))\n    ];\n\n    return hex.join(\"\");\n}\n\n// `equals`\n// Can be called with any tinycolor input\ntinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) { return false; }\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n};\n\ntinycolor.random = function() {\n    return tinycolor.fromRatio({\n        r: mathRandom(),\n        g: mathRandom(),\n        b: mathRandom()\n    });\n};\n\n\n// Modification Functions\n// ----------------------\n// Thanks to less.js for some of the basics here\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\nfunction desaturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction saturate(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n}\n\nfunction greyscale(color) {\n    return tinycolor(color).desaturate(100);\n}\n\nfunction lighten (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\nfunction brighten(color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * - (amount / 100))));\n    rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * - (amount / 100))));\n    rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * - (amount / 100))));\n    return tinycolor(rgb);\n}\n\nfunction darken (color, amount) {\n    amount = (amount === 0) ? 0 : (amount || 10);\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n}\n\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n// Values outside of this range will be wrapped into this range.\nfunction spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n}\n\n// Combination Functions\n// ---------------------\n// Thanks to jQuery xColor for some of the ideas behind these\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\nfunction complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n}\n\nfunction triad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction tetrad(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }),\n        tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })\n    ];\n}\n\nfunction splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n        tinycolor(color),\n        tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\n        tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l})\n    ];\n}\n\nfunction analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results; ) {\n        hsl.h = (hsl.h + part) % 360;\n        ret.push(tinycolor(hsl));\n    }\n    return ret;\n}\n\nfunction monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h, s = hsv.s, v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n        ret.push(tinycolor({ h: h, s: s, v: v}));\n        v = (v + modification) % 1;\n    }\n\n    return ret;\n}\n\n// Utility Functions\n// ---------------------\n\ntinycolor.mix = function(color1, color2, amount) {\n    amount = (amount === 0) ? 0 : (amount || 50);\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n        r: ((rgb2.r - rgb1.r) * p) + rgb1.r,\n        g: ((rgb2.g - rgb1.g) * p) + rgb1.g,\n        b: ((rgb2.b - rgb1.b) * p) + rgb1.b,\n        a: ((rgb2.a - rgb1.a) * p) + rgb1.a\n    };\n\n    return tinycolor(rgba);\n};\n\n\n// Readability Functions\n// ---------------------\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n// `contrast`\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\ntinycolor.readability = function(color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(),c2.getLuminance())+0.05) / (Math.min(c1.getLuminance(),c2.getLuminance())+0.05);\n};\n\n// `isReadable`\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\n// The third argument is an optional Object.\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n// If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n// *Example*\n//    tinycolor.isReadable(\"#000\", \"#111\") => false\n//    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\ntinycolor.isReadable = function(color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n        case \"AAsmall\":\n        case \"AAAlarge\":\n            out = readability >= 4.5;\n            break;\n        case \"AAlarge\":\n            out = readability >= 3;\n            break;\n        case \"AAAsmall\":\n            out = readability >= 7;\n            break;\n    }\n    return out;\n\n};\n\n// `mostReadable`\n// Given a base color and a list of possible foreground or background\n// colors for that base, returns the most readable color.\n// Optionally returns Black or White if the most readable color is unreadable.\n// *Example*\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n//    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n//    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\ntinycolor.mostReadable = function(baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size ;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors ;\n    level = args.level;\n    size = args.size;\n\n    for (var i= 0; i < colorList.length ; i++) {\n        readability = tinycolor.readability(baseColor, colorList[i]);\n        if (readability > bestScore) {\n            bestScore = readability;\n            bestColor = tinycolor(colorList[i]);\n        }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\"level\":level,\"size\":size}) || !includeFallbackColors) {\n        return bestColor;\n    }\n    else {\n        args.includeFallbackColors=false;\n        return tinycolor.mostReadable(baseColor,[\"#fff\", \"#000\"],args);\n    }\n};\n\n\n// Big List of Colors\n// ------------------\n// <http://www.w3.org/TR/css3-color/#svg-color>\nvar names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n};\n\n// Make it easy to access colors via `hexNames[hex]`\nvar hexNames = tinycolor.hexNames = flip(names);\n\n\n// Utilities\n// ---------\n\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\nfunction flip(o) {\n    var flipped = { };\n    for (var i in o) {\n        if (o.hasOwnProperty(i)) {\n            flipped[o[i]] = i;\n        }\n    }\n    return flipped;\n}\n\n// Return a valid alpha value [0,1] with all invalid values being set to 1\nfunction boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n\n    return a;\n}\n\n// Take input from [0, n] and return it as [0, 1]\nfunction bound01(n, max) {\n    if (isOnePointZero(n)) { n = \"100%\"; }\n\n    var processPercent = isPercentage(n);\n    n = mathMin(max, mathMax(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n        n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if ((Math.abs(n - max) < 0.000001)) {\n        return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n}\n\n// Force a number between 0 and 1\nfunction clamp01(val) {\n    return mathMin(1, mathMax(0, val));\n}\n\n// Parse a base-16 hex value into a base-10 integer\nfunction parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\n\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\nfunction isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n}\n\n// Check to see if string passed in is a percentage\nfunction isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf('%') != -1;\n}\n\n// Force a hex value to have 2 characters\nfunction pad2(c) {\n    return c.length == 1 ? '0' + c : '' + c;\n}\n\n// Replace a decimal with it's percentage value\nfunction convertToPercentage(n) {\n    if (n <= 1) {\n        n = (n * 100) + \"%\";\n    }\n\n    return n;\n}\n\n// Converts a decimal to a hex value\nfunction convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n// Converts a hex value to a decimal\nfunction convertHexToDecimal(h) {\n    return (parseIntFromHex(h) / 255);\n}\n\nvar matchers = (function() {\n\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n    return {\n        CSS_UNIT: new RegExp(CSS_UNIT),\n        rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n        rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n        hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n        hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n        hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n        hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n        hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n        hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n        hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n})();\n\n// `isValidCSSUnit`\n// Take in a single string / number and check to see if it looks like a CSS unit\n// (see `matchers` above for definition).\nfunction isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n}\n\n// `stringInputToObject`\n// Permissive string parsing.  Take in a number of formats, and output an object\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\nfunction stringInputToObject(color) {\n\n    color = color.replace(trimLeft,'').replace(trimRight, '').toLowerCase();\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color == 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            a: convertHexToDecimal(match[4] + '' + match[4]),\n            format: named ? \"name\" : \"hex8\"\n        };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n        return {\n            r: parseIntFromHex(match[1] + '' + match[1]),\n            g: parseIntFromHex(match[2] + '' + match[2]),\n            b: parseIntFromHex(match[3] + '' + match[3]),\n            format: named ? \"name\" : \"hex\"\n        };\n    }\n\n    return false;\n}\n\nfunction validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\"level\":\"AA\", \"size\":\"small\"};\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n        level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n        size = \"small\";\n    }\n    return {\"level\":level, \"size\":size};\n}\n\n// Node: Export function\nif (typeof module !== \"undefined\" && module.exports) {\n    module.exports = tinycolor;\n}\n// AMD/requirejs: Define the module\nelse if (typeof define === 'function' && define.amd) {\n    define(function () {return tinycolor;});\n}\n// Browser: Expose to window\nelse {\n    window.tinycolor = tinycolor;\n}\n\n})(Math);\n","import { Graphics } from '@pixi/graphics';\nimport dPathParser from 'd-path-parser';\nimport color from 'tinycolor2';\n\n/**\n * Scalable Graphics drawn from SVG image document.\n * @class SVG\n * @extends PIXI.Graphics\n * @memberof PIXI\n * @param {SVGSVGElement|SVGElement|string} [svg] - Inline SVGElement `<svg>` or buffer.\n */\nclass SVG extends Graphics\n{\n    constructor(svg)\n    {\n        super();\n\n        if (svg)\n        {\n            this.drawSVG(svg);\n        }\n    }\n\n    /**\n     * Draw an SVG element.\n     * @method PIXI.SVG#drawSVG\n     * @param {SVGSVGElement|SVGElement|string} svg - Inline SVGElement `<svg>` or buffer.\n     * @return {PIXI.SVG} Element suitable for chaining.\n     */\n    drawSVG(svg)\n    {\n        if (typeof svg === 'string')\n        {\n            const div = document.createElement('div');\n\n            div.innerHTML = svg.trim();\n            svg = div.querySelector('svg');\n        }\n\n        if (!svg)\n        {\n            throw new Error('Missing <svg> element in SVG constructor');\n        }\n\n        this._svgFill(svg);\n        this._svgChildren(svg.children);\n\n        return this;\n    }\n\n    /**\n     * Create a PIXI Graphic from SVG element\n     * @private\n     * @method\n     * @param {Array<*>} children - Collection of SVG nodes\n     * @param {Boolean} [inherit=false] Whether to inherit fill settings.\n     */\n    _svgChildren(children, inherit = false)\n    {\n        for (let i = 0; i < children.length; i++)\n        {\n            const child = children[i];\n\n            this._svgFill(child, inherit);\n            switch (child.nodeName.toLowerCase())\n            {\n                case 'path': {\n                    this._svgPath(child);\n                    break;\n                }\n                case 'circle':\n                case 'ellipse': {\n                    this._svgCircle(child);\n                    break;\n                }\n                case 'rect': {\n                    this._svgRect(child);\n                    break;\n                }\n                case 'polygon': {\n                    this._svgPoly(child, true);\n                    break;\n                }\n                case 'polyline': {\n                    this._svgPoly(child);\n                    break;\n                }\n                case 'g': {\n                    break;\n                }\n                default: {\n                    // eslint-disable-next-line no-console\n                    console.info(`[PIXI.SVG] <${child.nodeName}> elements unsupported`);\n                    break;\n                }\n            }\n            this._svgChildren(child.children, true);\n        }\n    }\n\n    /**\n     * Convert the Hexidecimal string (e.g., \"#fff\") to uint\n     * @private\n     * @method\n     */\n    _hexToUint(hex)\n    {\n        if (hex[0] === '#')\n        {\n            // Remove the hash\n            hex = hex.substr(1);\n\n            // Convert shortcolors fc9 to ffcc99\n            if (hex.length === 3)\n            {\n                hex = hex.replace(/([a-f0-9])/ig, '$1$1');\n            }\n\n            return parseInt(hex, 16);\n        }\n\n        const { r, g, b } = color(hex).toRgb();\n\n        return (r << 16) + (g << 8) + b;\n    }\n\n    /**\n     * Render a <ellipse> element or <circle> element\n     * @private\n     * @method\n     * @param {SVGCircleElement} node\n     */\n    _svgCircle(node)\n    {\n        let heightProp = 'r';\n        let widthProp = 'r';\n        const isEllipse = node.nodeName === 'elipse';\n\n        if (isEllipse)\n        {\n            heightProp += 'x';\n            widthProp += 'y';\n        }\n        const width = parseFloat(node.getAttribute(widthProp));\n        const height = parseFloat(node.getAttribute(heightProp));\n        const cx = node.getAttribute('cx');\n        const cy = node.getAttribute('cy');\n        let x = 0;\n        let y = 0;\n\n        if (cx !== null)\n        {\n            x = parseFloat(cx);\n        }\n        if (cy !== null)\n        {\n            y = parseFloat(cy);\n        }\n        if (!isEllipse)\n        {\n            this.drawCircle(x, y, width);\n        }\n        else\n        {\n            this.drawEllipse(x, y, width, height);\n        }\n    }\n\n    /**\n     * Render a <rect> element\n     * @private\n     * @method\n     * @param {SVGRectElement} node\n     */\n    _svgRect(node)\n    {\n        const x = parseFloat(node.getAttribute('x'));\n        const y = parseFloat(node.getAttribute('y'));\n        const width = parseFloat(node.getAttribute('width'));\n        const height = parseFloat(node.getAttribute('height'));\n        const rx = parseFloat(node.getAttribute('rx'));\n\n        if (rx)\n        {\n            this.drawRoundedRect(x, y, width, height, rx);\n        }\n        else\n        {\n            this.drawRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * Convert the SVG style name into usable name.\n     * @private\n     * @param {string} name\n     * @return {string} name used to reference style\n     */\n    _convertStyleName(name)\n    {\n        return name\n            .trim()\n            .replace('-width', 'Width')\n            .replace(/.*-(line)?/, '');\n    }\n\n    /**\n     * Get the style property and parse options.\n     * @private\n     * @method\n     * @param {SVGElement} node\n     * @return {Object} Style attributes\n     */\n    _svgStyle(node)\n    {\n        const style = node.getAttribute('style');\n        const result = {\n            fill: node.getAttribute('fill'),\n            opacity: node.getAttribute('opacity'),\n            stroke: node.getAttribute('stroke'),\n            strokeWidth: node.getAttribute('stroke-width'),\n            cap: node.getAttribute('stroke-linecap'),\n            join: node.getAttribute('stroke-linejoin'),\n            miterLimit: node.getAttribute('stroke-miterlimit'),\n        };\n\n        if (style !== null)\n        {\n            style.split(';').forEach((prop) =>\n            {\n                const [name, value] = prop.split(':');\n\n                if (name)\n                {\n                    const convertedName = this._convertStyleName(name);\n\n                    if (!result[convertedName])\n                    {\n                        result[convertedName] = value.trim();\n                    }\n                }\n            });\n        }\n\n        return result;\n    }\n\n    /**\n     * Render a polyline element.\n     * @private\n     * @method\n     * @param {SVGPolylineElement} node\n     */\n    _svgPoly(node, close)\n    {\n        const points = node.getAttribute('points')\n            .split(/[ ,]/g)\n            .map((p) => parseInt(p, 10));\n\n        this.drawPolygon(points);\n\n        if (close)\n        {\n            this.closePath();\n        }\n    }\n\n    /**\n     * Set the fill and stroke style.\n     * @private\n     * @method\n     * @param {SVGElement} node\n     * @param {Boolean} inherit\n     */\n    _svgFill(node, inherit)\n    {\n        const { fill, opacity, stroke, strokeWidth, cap, join, miterLimit } = this._svgStyle(node);\n        const defaultLineWidth = stroke !== null ? 1 : 0;\n        const lineWidth = strokeWidth !== null ? parseFloat(strokeWidth) : defaultLineWidth;\n        const lineColor = stroke !== null ? this._hexToUint(stroke) : this.lineColor;\n\n        if (fill)\n        {\n            if (fill === 'none')\n            {\n                this.beginFill(0, 0);\n            }\n            else\n            {\n                this.beginFill(\n                    this._hexToUint(fill),\n                    opacity !== null ? parseFloat(opacity) : 1,\n                );\n            }\n        }\n        else if (!inherit)\n        {\n            this.beginFill(0);\n        }\n\n        this.lineStyle({\n            width: stroke === null && strokeWidth === null && inherit ? this.line.width : lineWidth,\n            color: stroke === null && inherit ? this.line.color : lineColor,\n            cap: cap === null && inherit ? this.line.cap : cap,\n            join: join === null && inherit ? this.line.join : join,\n            miterLimit: miterLimit === null && inherit ? this.line.miterLimit : parseFloat(miterLimit),\n        });\n\n        if (node.getAttribute('fill-rule'))\n        {\n            // eslint-disable-next-line no-console\n            console.info('[PIXI.SVG] \"fill-rule\" attribute is not supported');\n        }\n    }\n\n    /**\n     * Render a <path> d element\n     * @method\n     * @param {SVGPathElement} node\n     */\n    _svgPath(node)\n    {\n        const d = node.getAttribute('d');\n        let x;\n        let y;\n        const commands = dPathParser(d.trim());\n\n        for (let i = 0; i < commands.length; i++)\n        {\n            const command = commands[i];\n\n            switch (command.code)\n            {\n                case 'm': {\n                    this.moveTo(\n                        x += command.end.x,\n                        y += command.end.y,\n                    );\n                    break;\n                }\n                case 'M': {\n                    this.moveTo(\n                        x = command.end.x,\n                        y = command.end.y,\n                    );\n                    break;\n                }\n                case 'H': {\n                    this.lineTo(x = command.value, y);\n                    break;\n                }\n                case 'h': {\n                    this.lineTo(x += command.value, y);\n                    break;\n                }\n                case 'V': {\n                    this.lineTo(x, y = command.value);\n                    break;\n                }\n                case 'v': {\n                    this.lineTo(x, y += command.value);\n                    break;\n                }\n                case 'Z': {\n                    this.closePath();\n                    break;\n                }\n                case 'L': {\n                    this.lineTo(\n                        x = command.end.x,\n                        y = command.end.y,\n                    );\n                    break;\n                }\n                case 'l': {\n                    this.lineTo(\n                        x += command.end.x,\n                        y += command.end.y,\n                    );\n                    break;\n                }\n                case 'C': {\n                    this.bezierCurveTo(\n                        command.cp1.x,\n                        command.cp1.y,\n                        command.cp2.x,\n                        command.cp2.y,\n                        x = command.end.x,\n                        y = command.end.y,\n                    );\n                    break;\n                }\n                case 'c': {\n                    const currX = x;\n                    const currY = y;\n\n                    this.bezierCurveTo(\n                        currX + command.cp1.x,\n                        currY + command.cp1.y,\n                        currX + command.cp2.x,\n                        currY + command.cp2.y,\n                        x += command.end.x,\n                        y += command.end.y,\n                    );\n                    break;\n                }\n                case 's':\n                case 'q': {\n                    const currX = x;\n                    const currY = y;\n\n                    this.quadraticCurveTo(\n                        currX + command.cp.x,\n                        currY + command.cp.y,\n                        x += command.end.x,\n                        y += command.end.y,\n                    );\n                    break;\n                }\n                case 'S':\n                case 'Q': {\n                    this.quadraticCurveTo(\n                        command.cp.x,\n                        command.cp.y,\n                        x = command.end.x,\n                        y = command.end.y,\n                    );\n                    break;\n                }\n                case 'a': {\n                    const RAD = (Math.PI / 180);\n\n                    this.arc(\n                        (x += command.end.x),\n                        (y += command.end.y),\n                        command.rotation * RAD,\n                        command.radii.x * RAD,\n                        command.radii.y * RAD,\n                        command.clockwise,\n                    );\n                    break;\n                }\n                case 'A': {\n                    const RAD = (Math.PI / 180);\n\n                    this.arc(\n                        (x = command.end.x),\n                        (y = command.end.y),\n                        command.rotation * RAD,\n                        command.radii.x * RAD,\n                        command.radii.y * RAD,\n                        command.clockwise\n                    );\n                    break;\n                }\n                default: {\n                    // eslint-disable-next-line no-console\n                    console.info('[PIXI.SVG] Draw command not supported:', command.code, command);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nexport { SVG };\n"],"names":["module","d","re","command","number","comma","flag","matchers","must","get","coordinate pair","x","y","arc definition","radii","rotation","large","clockwise","end","index","commands","length","sequence","cmd","upcmd","toUpperCase","relative","getSequence","map","coords","i","makeCommand","Error","reduce","seq","rest","push","cp1","cp","value","code","apply","obj","what","lastIndex","res","exec","matched","Math","trimLeft","trimRight","tinyCounter","mathRound","round","mathMin","min","mathMax","max","mathRandom","random","tinycolor","color","opts","this","rgb","r","g","b","a","s","v","l","ok","format","replace","toLowerCase","match","named","names","rgba","hsl","h","hsla","hsv","hsva","hex8","parseIntFromHex","convertHexToDecimal","hex6","hex4","hex3","stringInputToObject","isValidCSSUnit","bound01","String","substr","convertToPercentage","floor","f","p","q","t","mod","hsvToRgb","hue2rgb","hslToRgb","hasOwnProperty","boundAlpha","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","_format","_gradientType","gradientType","_ok","_tc_id","rgbToHsl","rgbToHsv","rgbToHex","allow3Char","hex","pad2","toString","charAt","join","rgbaToArgbHex","convertDecimalToHex","desaturate","amount","toHsl","clamp01","saturate","greyscale","lighten","brighten","toRgb","darken","spin","hue","complement","triad","tetrad","splitcomplement","analogous","results","slices","part","ret","monochromatic","toHsv","modification","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","pow","setAlpha","toHsvString","toHslString","toHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","clone","_applyModification","fn","args","concat","slice","call","arguments","_applyCombination","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","parms","level","size","validateWCAG2Parms","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","o","flipped","flip","parseFloat","isNaN","n","indexOf","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","c","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","exports","window","SVG","svg","super","drawSVG","const","div","document","createElement","innerHTML","trim","querySelector","_svgFill","_svgChildren","children","inherit","let","child","nodeName","_svgPath","_svgCircle","_svgRect","_svgPoly","console","info","_hexToUint","node","heightProp","widthProp","isEllipse","width","getAttribute","height","cx","cy","drawEllipse","drawCircle","rx","drawRoundedRect","drawRect","_convertStyleName","name","_svgStyle","style","result","fill","opacity","stroke","strokeWidth","cap","miterLimit","split","forEach","prop","convertedName","close","points","drawPolygon","closePath","defaultLineWidth","lineWidth","lineColor","beginFill","lineStyle","line","dPathParser","moveTo","lineTo","bezierCurveTo","cp2","currX","currY","quadraticCurveTo","RAD","PI","arc","Graphics"],"mappings":"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"}